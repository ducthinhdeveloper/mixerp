function shouldEqualByInput(n,t,i,r){i.val(n);i.trigger("blur");var u=r.find("option:selected").val();t.equal(n,u,'The pair cascaded on input event to value "'+n+'".')}function shouldNotEqualByInput(n,t,i,r){i.val(n);i.trigger("blur");var u=r.find("option:selected").val();t.notEqual(n,u,'The pair did not cascade on input event to an invalid value "'+n+'".')}function shouldEqualBySelect(n,t,i,r){r.val(n);r.trigger("change");actual=i.val();t.equal(n,actual,'The pair cascaded on select event to value "'+n+'".')}function shouldNotEqualBySelect(n,t,i,r){r.val(n);r.trigger("change");actual=i.val();t.notEqual(n,actual,'The pair did not cascade on select event to an invalid value "'+n+'".')}function shouldEqualByItemSelect(n,t,i){i.val(n);i.trigger("change");actual=i.getSelectedText();t.equal(n,actual,'The function returned the expected value "'+n+'".')}var select,itemTable;QUnit.test("cascading-pair.js -> createCascadingPair",function(n){var t=["Mugu","Langtang","Annapurna","Pumori","Denver","Las Vegas"],i=$("<select  id='DesintaionSelect' />").hide(),r=$("<input type='text' id='DestinationInput' />").hide();$.each(t,function(n,t){i.append($("<option/>",{value:t,text:t}))});$("body").append(i).append(r);createCascadingPair(i,r);t=t.sort(function(){return.5-Math.random()});$.each(t,function(t,u){window.shouldEqualByInput(u,n,r,i)});t=t.sort(function(){return.5-Math.random()});$.each(t,function(t,u){window.shouldEqualBySelect(u,n,r,i)});t=["Mississippi","Nilgiri","Lhotse","Texas","Colorado","St. Austin"];$.each(t,function(t,u){window.shouldNotEqualByInput(u,n,r,i)});t=t.sort(function(){return.5-Math.random()});$.each(t,function(t,u){window.shouldNotEqualBySelect(u,n,r,i)});i.remove();r.remove()});QUnit.test("checkable.js -> toogleSelection",function(n){var t=$('<input type="checkbox" checked="checked" />').hide();$("body").append(t);toogleSelection(t);t.not(":checked")?n.ok(!0,"Input was unchecked."):n.ok(!1,"Input was not unchecked.");toogleSelection(t);toogleSelection(t);toogleSelection(t);t.is(":checked")?n.ok(!0,"Input was checked."):n.ok(!1,"Input was not checked.");toogleSelection(t);toogleSelection(t);toogleSelection(t);toogleSelection(t);toogleSelection(t);t.not(":checked")?n.ok(!0,"Input was unchecked again."):n.ok(!1,"Input was not unchecked again.");toogleSelection(t);toogleSelection(t);toogleSelection(t);toogleSelection(t);toogleSelection(t);t.not(":checked")?n.ok(!0,"Input was checked again."):n.ok(!1,"Input was not checked again.");t.remove()});QUnit.test("event.js -> triggerClick",function(n){var t=$("<input type='button' id='TestButton' />").hide(),i;$("body").append(t);i=!1;t.click(function(){i=!0});triggerClick("TestButton");n.ok(!0===i,"Successfully triggered the event 'triggerClick'.");t.remove()});QUnit.test("event.js -> triggerChange",function(n){var t=$("<select id='TestSelect' />").hide(),i;$("body").append(t);i=!1;t.change(function(){i=!0});triggerChange("TestSelect");n.ok(!0===i,"Successfully triggered the event 'triggerChange'.");t.remove()});QUnit.test("visibility.js -> triggerClick",function(n){var t=$("<div style='display:none;'><\/div>"),i;$("body").append(t);setVisible(t,!0,0);i=t.is(":visible");n.equal(i,!0,"The element was unhidden.");setVisible(t,!1,0);i=t.is(":visible");n.equal(i,!1,"The element was hidden.");setVisible(t,!1,0);i=t.is(":visible");n.equal(i,!1,"The element is still hidden.");setVisible(t,!0,0);i=t.is(":visible");n.equal(i,!0,"The element was unhidden again.")});select=$("<select id='ItemSelect'/>").hide();QUnit.test("select.js -> getSelectedText",function(n){var t=["Macbook","Ipad","Mobile","Laptop"];$.each(t,function(n,t){select.append($("<option/>",{value:t,text:t}))});$("body").append(select);$.each(t,function(t,i){shouldEqualByItemSelect(i,n,select)})});window.currencySymbol="Rs. ";window.currencyDecimalPlaces="2";itemTable=$("<table>     <thead>         <tr>            <th>Item Name<\/th>            <th>Qty<\/th>            <th>Price<\/th> \t<\/tr>     <\/thead>     <tbody > \t<tr> \t    <td>Item 1<\/td> \t    <td>100<\/td> \t    <td>Rs. 4000.00<\/td> \t<\/tr> \t<tr> \t    <td>Item 2<\/td> \t    <td>2<\/td> \t    <td>Rs. 13000.00<\/td> \t<\/tr> \t<tr> \t    <td>Item 3<\/td> \t    <td>55<\/td> \t    <td>Rs. 3708.00<\/td> \t<\/tr> \t<tr> \t    <td>Item 4<\/td> \t    <td>102<\/td> \t    <td>Rs. 12490.00<\/td> \t<\/tr>     <\/tbody> <\/table> ");QUnit.test("cell.js -> sumOfColumn",function(n){var t=259,i=parseFloat2(sumOfColumn(itemTable,1));n.equal(i,t,'The function returned expected value "'+t+'".');t=33198;i=parseFloat2(sumOfColumn(itemTable,2));n.equal(i,t,'The function returned expected "'+t+'".')});QUnit.test("cell.js -> getColumnText",function(n){var t=100,i=parseFloat2(getColumnText(itemTable,1));n.equal(i,t,'The function returned expected value "'+t+'".');t=4e3;i=parseFloat2(getColumnText(itemTable,2));n.equal(i,t,'The function returned expected value "'+t+'".');t=2;i=parseFloat2(getColumnText(itemTable,4));n.equal(i,t,'The function returned expected value"'+t+'".')});QUnit.test("grid.js, ->getSelectedCheckBoxItemIds",function(n){var i=$("<table>     <thead>         <tr>            <th>Select<\/th>            <th>Id<\/th> \t     <\/tr>     <\/thead>    <tbody > \t<tr> \t    <td><input type='checkbox'/><\/td> \t    <td>100<\/td> \t<\/tr> \t<tr> \t    <td><input type='checkbox'/><\/td> \t    <td>2<\/td> \t<\/tr>    <\/tbody> <\/table> ").hide(),u,f,t,r;$("body").append(i);u=i.find("tbody tr:eq(0) :checkbox");f=i.find("tbody tr:eq(1) :checkbox");u.prop("checked",!0);t=100;r=parseFloat(getSelectedCheckBoxItemIds(1,2,i));n.equal(r,t,'The function returned the expected id "'+t+'".');u.prop("checked",!1);f.prop("checked",!0);t=2;r=parseFloat(getSelectedCheckBoxItemIds(1,2,i));n.equal(r,t,'The function returned the expected id "'+t+'".')});QUnit.test("localization.js -> getFormattedNumber (Case 1)",function(n){window.currencyDecimalPlaces=2;window.thousandSeparator=",";window.decimalSeparator=".";var t=["100.00","1,000.00","1,000,000,000.00","1,000,000,000,000,000.00"];$.each(["100","1000","1000000000","1000000000000000"],function(i,r){var f=getFormattedNumber(r),u=t[i];n.equal(f,u,'The function returned expected formatted number "'+u+'".')})});QUnit.test("localization.js -> getFormattedNumber (Case 2)",function(n){window.currencyDecimalPlaces=2;window.thousandSeparator=".";window.decimalSeparator=",";var t=["100,00","1.000,00","1.000.000.000,00","1.000.000.000.000.000,00"];$.each(["100","1000","1000000000","1000000000000000"],function(i,r){var f=getFormattedNumber(r),u=t[i];n.equal(f,u,'The function returned expected formatted number "'+u+'".')})});QUnit.test("localization.js -> getFormattedNumber (Case 3)",function(n){window.currencyDecimalPlaces=2;window.thousandSeparator=" ";window.decimalSeparator=",";var t=["100,00","1 000,00","1 000 000 000,00","1 000 000 000 000 000,00"];$.each(["100","1000","1000000000","1000000000000000"],function(i,r){var f=getFormattedNumber(r),u=t[i];n.equal(f,u,'The function returned expected formatted number "'+u+'".')})});QUnit.test("localization.js -> parseFormattedNumber (Case 1)",function(n){window.thousandSeparator=",";window.decimalSeparator=".";var t="1000000000000.00",i=parseFormattedNumber("1,000,000,000,000.00");n.equal(i,t,'The function returned expected parsed formatted number "'+t+'".')});QUnit.test("localization.js -> parseFormattedNumber (Case 2)",function(n){window.thousandSeparator=".";window.decimalSeparator=",";var t="1000000000000.00",i=parseFormattedNumber("1.000.000.000.000,00");n.equal(i,t,'The function returned expected parsed formatted number "'+t+'".')});QUnit.test("localization.js -> parseFormattedNumber (Case 3)",function(n){window.thousandSeparator=" ";window.decimalSeparator=",";var t="1000000000000.00",i=parseFormattedNumber("1 000 000 000 000,00");n.equal(i,t,'The function returned expected parsed formatted number "'+t+'".')});QUnit.test("transaction.js -> convertToDebit",function(n){var i=-100,r=100,t=convertToDebit(r);n.equal(t,i,'The credit balance was converted to debit balance "'+t+'".');i=-1000.33;r=1000.33;t=convertToDebit(r);n.equal(t,i,'The credit balance was converted to debit balance "'+t+'".');i=-.33;r=.33;t=convertToDebit(r);n.equal(t,i,'The credit balance was converted to debit balance "'+t+'".')});QUnit.test("validation.js -> isNullOrWhiteSpace",function(n){var t=isNullOrWhiteSpace("  "),i="The function passed the test.";n.equal(!0,t,i);t=isNullOrWhiteSpace("owieru");n.equal(!1,t,i);t=isNullOrWhiteSpace(["","","1"]);n.equal(!0,t,i);t=isNullOrWhiteSpace(["1","abx","sdf4"]);n.equal(!1,t,i)});
//# sourceMappingURL=all-tests.min.js.map
